From 5aa527dd8be5598abbb1e465e3b03307d8c46a5b Mon Sep 17 00:00:00 2001
From: Ankita Sethi <ankitasethi@Ankitas-MBP.lan1>
Date: Thu, 14 May 2020 19:36:26 -0400
Subject: [PATCH] Create Patch File

---
 client3.py     | 14 +++++++++++---
 client_test.py | 13 +++++++++----
 2 files changed, 20 insertions(+), 7 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..db6c84d 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,20 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price + ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	if(price_b == 0) :
+		#preventing error from division by 0
+		return
+
+	ratio=price_a/price_b
+	
+	return ratio
 
 # Main
 if __name__ == "__main__":
@@ -52,8 +58,10 @@ if __name__ == "__main__":
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
 		""" ----------- Update to get the ratio --------------- """
+		prices = {}
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock]=price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..1854620 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import *
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,15 +8,20 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+    for quote in quotes :
+      self.assertEqual (getDataPoint(quote), (quote['stock'],quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price']+quote['top_ask']['price'])/2))
+  
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+    """ The price bid is not greater than ask for stock 'DEF' 
+        Also, we can not just copy the quotes from this stock (as is currently) and paste them to the other function because the stock names are could throw an error.
+    """
     quotes = [
       {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
-
+    for quote in quotes:
+      self.assertEqual (getDataPoint(quote), (quote['stock'],quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price']+quote['top_ask']['price'])/2))
   """ ------------ Add more unit tests ------------ """
 
 
-- 
2.24.2 (Apple Git-127)

